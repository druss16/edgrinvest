# Stage 1: Build React frontend
FROM node:22-slim AS frontend-build
WORKDIR /app/frontend

# Update npm to match modern lockfile format compatibility
RUN npm install -g npm@10

# Copy both package.json and lock file
COPY frontend/package*.json ./
RUN npm ci

# Copy source code and build
COPY frontend/ .
RUN npm run build


# Stage 2: Build Django project
FROM python:3.11-slim AS build
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=edgr_invest.settings.prod
ENV DJANGO_SECRET_KEY=temp-build-key
WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    libpq-dev \
    curl \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy Django project
COPY . .

# Copy React build output
COPY --from=frontend-build /app/frontend/build /app/frontend/build

# Copy frontend/src/assets explicitly (if needed at runtime)
COPY frontend/src/assets /app/frontend/src/assets

# Create logs and staticfiles directories
RUN mkdir -p /app/logs /app/staticfiles && chmod -R 775 /app/logs /app/staticfiles

# Collect static files
RUN python manage.py collectstatic --noinput --no-post-process

# Stage 3: Production stage
FROM python:3.11-slim
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV DJANGO_SETTINGS_MODULE=edgr_invest.settings.prod
ENV PYTHONPATH=/app
ENV PORT=8000
WORKDIR /app

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libpq5 \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Create a non-root user
RUN addgroup --system appgroup && adduser --system --ingroup appgroup appuser

# Copy from build stage
COPY --from=build /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=build /usr/local/bin/gunicorn /usr/local/bin/gunicorn
COPY --from=build /app /app

# Set permissions
RUN chown -R appuser:appgroup /app/logs /app/staticfiles

# Copy entrypoint
COPY entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/entrypoint.sh

# Set ownership
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

EXPOSE 8000
ENTRYPOINT ["/app/entrypoint.sh"]
